[{"E:\\react-workplace\\antd-app\\src\\index.js":"1","E:\\react-workplace\\antd-app\\src\\App.js":"2","E:\\react-workplace\\antd-app\\src\\reportWebVitals.js":"3","E:\\react-workplace\\antd-app\\src\\components\\Cascaders\\Cascader9.jsx":"4","E:\\react-workplace\\antd-app\\src\\components\\Cascaders\\Cascader10.jsx":"5","E:\\react-workplace\\antd-app\\src\\components\\Cascaders\\Cascader11.jsx":"6"},{"size":500,"mtime":1612661981139,"results":"7","hashOfConfig":"8"},{"size":310,"mtime":1612666064905,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612661981140,"results":"10","hashOfConfig":"8"},{"size":1773,"mtime":1612663917571,"results":"11","hashOfConfig":"8"},{"size":1091,"mtime":1612665763511,"results":"12","hashOfConfig":"8"},{"size":1054,"mtime":1612666061909,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wa9wn1",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react-workplace\\antd-app\\src\\index.js",[],"E:\\react-workplace\\antd-app\\src\\App.js",[],"E:\\react-workplace\\antd-app\\src\\reportWebVitals.js",[],"E:\\react-workplace\\antd-app\\src\\components\\Cascaders\\Cascader9.jsx",["28"],"import { Cascader } from 'antd'\r\n\r\nconst options = [\r\n    {\r\n        value: 'zhejiang',\r\n        label: 'Zhejiang',\r\n        children: [\r\n            {\r\n                value: 'hangzhou',\r\n                label: 'Hangzhou',\r\n                children: [\r\n                    {\r\n                        value: 'xihu',\r\n                        label: 'West Lake',\r\n                        code: 752100\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        value: 'jiangsu',\r\n        label: 'Jiangsu',\r\n        children: [\r\n            {\r\n                value: 'nanjing',\r\n                label: 'Nanjing',\r\n                children: [\r\n                    {\r\n                        value: 'zhonghuamen',\r\n                        label: 'Zhong Hua Men',\r\n                        code: 453400\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nfunction handleAreaClick(e, label, option) {\r\n    e.stopPropagation()\r\n    console.log('clicked', label, option)\r\n}\r\n\r\nconst displayRender = (labels, selectedOptions) =>\r\n    labels.map((label, i) => {\r\n        const option = selectedOptions[i]\r\n        if (i === labels.length - 1) {\r\n            return (\r\n                <span key={option.value}>\r\n                    {label} <a onClick={e => handleAreaClick(e, label, option)}>{option.code}</a>\r\n                </span>\r\n            )\r\n        }\r\n        return <span key={option.value}>{label} / </span>\r\n    })\r\n\r\nexport function Cascader9() {\r\n    return (\r\n        <>\r\n            <Cascader\r\n                options={options}\r\n                defaultValue={['zhejiang', 'hangzhou', 'xihu']}\r\n                displayRender={displayRender}\r\n                style={{ width: '100%' }} />\r\n        </>\r\n    )\r\n}",["29","30"],"E:\\react-workplace\\antd-app\\src\\components\\Cascaders\\Cascader10.jsx",[],"E:\\react-workplace\\antd-app\\src\\components\\Cascaders\\Cascader11.jsx",[],{"ruleId":"31","severity":1,"message":"32","line":51,"column":29,"nodeType":"33","endLine":51,"endColumn":81},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-global-assign","no-unsafe-negation"]